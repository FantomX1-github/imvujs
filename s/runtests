#!/bin/bash

function fail() {
    echo "Failed"
    exit 1
}

HERE=`dirname "$0"`

# Run JSHint against any .js file staged in git
NODEJS="$HERE/node"
JSHINT="$HERE/../third-party/node-jshint/bin/hint"

if [ .$MSYSTEM = .MINGW32 ]; then
    FINDSUBST="\;"
else
    FINDSUBST="+"
fi

if [ "$@" ]; then
    TESTS="$@"
    echo "Running jshint..."
    $NODEJS $JSHINT $TESTS || exit 1
else
    echo "Running jshint..."
    find src fakes -iname '*.js' -exec $NODEJS $JSHINT {} $FINDSUBST || fail
    TESTS=`find $HERE/.. -iname '*.test.js'`
fi

"$HERE"/../bin/test --superfixture "$HERE/../tests/superfixture.js" $TESTS || fail

echo "Now testing failures..."
# Now test failures!

EXPECTED_FAILS=`find $HERE/.. -iname '*.fail.js'`
for expected in $EXPECTED_FAILS; do
    echo $expected ...
    "$HERE"/../bin/test --superfixture "$HERE/../tests/superfixture.js" $expected > /dev/null
    if [ "$?" = 0 ]; then
        echo "$expected passed incorrectly"
        exit 1
    fi
done

echo
echo "Success!"
exit 0

